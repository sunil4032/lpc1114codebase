v0.60 - Ongoing
===============

- Added rollover counter to the systick timer
- Updated schematic for wireless board in
  tools/schematics (v1.6 which is the final
  production version).  This schematic shows
  the expected layout for peripherals like the
  SD card and battery voltage divider.
- Reduced command names in cmd_tbl.h to save
  some flash space, and reduced text in various
  commands (saves ~0.3kb)
- Added the battery/supply voltage to the 'sysinfo'
  command (only applies to LPC1114 wireless board)
- Made a number of changes for deep-sleep mode to
  reduce power consumption (pmu.c updated, including
  a bug fix that prevented the code from exiting
  deep sleep twice from SW).
- Added basic driver for SSD1306-based 128x64
  OLED displays (courtesy Adafruit Industries who have
  a convenient breakout board for these displays).
- Added 'chb_libpcap' to log raw 802.15.4 frames
  to libpcap binary files.  This allows wireless
  traffic to be stored for debugging and analysis
  in Wireshark or other libpcap compatible
  protocol analysers.  Based on wsbridge by Freaklabs.
- Added a 'tools' folder with schematics and common
  open-source tools that can be used with the code base
- Modified 'core/gpio/gpio.c' to reduce the compiled code
  size. Repetitive switches where only the registers
  change were modified to use temporary registers and
  execute the code only once.
- Updated Chibi to v0.91 (adds sleep method and
  promiscuous mode to allow Chibi to act as an
  802.15.4 packet sniffer, etc.).  To enable
  promiscuous mode, set CFG_CHIBI_PROMISCUOUS to 1
  and change the buffer size to 1024 to handle
  a larger amount of incoming traffic.  The following
  code will send all incoming bytes to UART for
  processing on the PC using WSBridge (available
  in the '/tools' folder or from www.freaklabs.org):

    #include "drivers/chibi/chb.h"
    #include "drivers/chibi/chb_drvr.h"
    static chb_rx_data_t rx_data;

    ...

    chb_pcb_t *pcb = chb_get_pcb();
    while(1)
    {
      // Check for incoming messages 
      while (pcb->data_rcv) 
      { 
        // get the length of the data
        rx_data.len = chb_read(&rx_data);
        // make sure the length is nonzero
        if (rx_data.len)
        {
          // Enable LED to indicate message reception 
          gpioSetValue (CFG_LED_PORT, CFG_LED_PIN, CFG_LED_ON); 

          // Send raw data to UART for processing on
          // the PC (requires WSBridge - www.freaklabs.org)
          uint8_t i;
          for (i=0; i<rx_data.len; i++)
          {
            // Send output to UART
            uartSendByte(rx_data.data[i]);
          }

          // Disable LED
          gpioSetValue (CFG_LED_PORT, CFG_LED_PIN, CFG_LED_OFF); 
        }
      }
    }

v0.50 - 8 December 2010
=======================

- Modified Chibi to use 16-bit timer 0 for us delays (more accurate)
- Added a flag to projectconfig.h to make FATFS read-only (to
  save a couple KB when space is tight).
- Moved 'project/eeprom.*' to 'drivers/eeprom' to add a level
  of abstraction to eeprom access throughout the code
- Added a table to projectconfig.h to try to keep track of pin and peripheral usage by drivers
  and the included SW examples.
- Added a simple pwm driver using 16-bit timer 1 and p1.9 (MAT0).  The code can be found
  in "/core/pwm".
- Added a bi-polar stepper motor driver based on the Arduino library.  Basic position data was added
  to detect deviation from the 'Home' position and to retrieve the spindle's current rotation.  See
  "drivers/motor/stepper" for more information.
- Added simple RSA encryption/decryption driver.  Currently limited to
  using 64-bit and 32-bit numbers in key pairs, which isn't terribly secure,
  but allows much smaller code size than if huge number support was included.
- Added a driver for the MCP4725 I2C DAC (see "drivers/dac/mcp4725").
- Updated Chibi to v0.90
- Modified FCLK_FAST() in 'drivers/fatfs/mmc.c' to set fast SPI speed
  to 9MHz instead of the previous 2MHz.

v0.30 - 7 October 2010
======================

- Moved command.c and cmd_tbl.h to /project to try to keep all project-specific files in one location
- Created seperate .c files for every command for the command-line interface to make it easier
  to maintain and share code between projects.  All commands listed in cmd_tbl.h are now stored
  in their own files in /project/commands (ex.: "/project/commands/cmd_hello.c", etc.)
- Add a CLI command to show the contents of any directory from the SD card 
  (/project/commmands/cmd_sd_dir.c)
- Added a CLI command showing how to enter deep-sleep and exit with a SW wakeup
  (/project/commands/cmd_deepsleep.c)
- Fixed pmu.c to set the core clock back to an appropriate state after wakeup

v0.21 - 21 September 2010
=========================

- Added ChaN's FATFS and a basic MMC/SDHC driver
- Added "drivers/lcd" and a prelimenary (experimental) driver for 128x64
  pixel ST7565-based bitmap LCDs (ex: http://www.adafruit.com/index.php?main_page=product_info&cPath=37&products_id=250)
